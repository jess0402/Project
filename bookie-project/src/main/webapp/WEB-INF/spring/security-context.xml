<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.2.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">
	
	<!-- #9.2. bcryptPasswordEncoder bean 등록 -->
	<beans:bean id="bcryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"></beans:bean>
	
		<!-- #9.4. 인증/권한 설정 -->
	<!-- static 자원은 security filter처리 하지 않음 -->
	<http security="none" pattern="/resources/**" />
	<http auto-config="true">
		<intercept-url pattern="/" access="permitAll"/>
		
		<intercept-url pattern="/member/login.do" access="isAnonymous()"/>
		<intercept-url pattern="/member/memberEnroll.do" access="isAnonymous()"/>
		<intercept-url pattern="/member/checkIdDuplicate.do" access="isAnonymous()"/>
		

		<!--  책검색, 등록 -->
		<intercept-url pattern="/search/bookEnroll.do" access="isAuthenticated()"/>
		<intercept-url pattern="/search/recommendUser.do" access="isAuthenticated()"/>
		<intercept-url pattern="/search/**" access="permitAll"/>
		
		
		<!-- 피드 -->
		<intercept-url pattern="/pheed/**" access="isAuthenticated()"/>
		
		<!-- 독후감 -->
		<intercept-url pattern="/dokoo/**" access="isAuthenticated()"/>
		
		<!-- 북클럽 -->
		<intercept-url pattern="/club/enrollClub.do" access="hasRole('ADMIN')" />
		<intercept-url pattern="/club/clubList.do" access="permitAll" />
		<intercept-url pattern="/club/clubListMonth.do" access="permitAll" />
		<intercept-url pattern="/club/clubAnn.do" access="permitAll" />
		<intercept-url pattern="/club/clubBoardEnroll.do" access="isAuthenticated()" />
      	<intercept-url pattern="/club/clubBoardDetail.do" access="isAuthenticated()" />
		
		<!-- 마이페이지 -->
		<intercept-url pattern="/mypage/**" access="isAuthenticated()"/>
		<intercept-url pattern="/mypage/adminPage.do" access="hasRole('ADMIN')" />
		
		
		

		
		<!--
			login-page GET방식 폼 페이지 요청 (핸들러 작성 필요)
			login-processing-url POST방식 로그인 처리 요청 (핸들러 작성 생략 가능 - 알아서 처리)
			authentication-success-forward-url 로그인 성공시 후처리 - 핸들러를 연결
			authentication-success-handler-ref=""
			authentication-failure-forward-url="" 로그인 실패시 후처리 ..
			
			username-parameter="memberId" 원래는 유서 네임 으로 받는데내가 사용하는 유저네임으로 받음 
		 -->

		<form-login login-page="/member/login.do" 
					login-processing-url="/member/login.do"
					authentication-success-forward-url="/member/loginSuccess.do"
					username-parameter="memberId"
					password-parameter="password"/>

		<!-- 
			logout-url POST logout요청 (핸들러 작성 생략 가능)
			success-handler-ref="" 로그아웃 성공 시 후처리
		 -->					
		<logout logout-url="/member/logout.do"
				logout-success-url="/"/>
	
				
				
				
				
		<!-- 
			disabled = true 기본값 -> false : csrf 공격 대비 기능 사용안함
			csrf : Cross Site Request Forgery 공격 (악성코드를 통해 권한있는 사용자의 폼 제출을 유도하는 공격) 
				 	관리자를 유도하여 악성코드 심도록 유도
			모든 POST방식의 폼제출에 csrf 공격대비 토큰 검증
		 -->
		<csrf disabled="false"/>
		
		<!-- 
			dataSource : root-context에 작성된 Bean
			token-validity-seconds 토큰 유효시간(초) 60 * 60 * 24 * 14 (2주)  
		 -->
		<remember-me data-source-ref="dataSource" token-validity-seconds="1209600"/>
		
	</http>
	
	<authentication-manager>
		<authentication-provider user-service-ref="securityService">
			<password-encoder ref="bcryptPasswordEncoder"/>
		</authentication-provider>
	</authentication-manager>
	<context:component-scan base-package="com.kh.bookie.security" />
</beans:beans>